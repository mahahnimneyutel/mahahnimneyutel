function runComparisons(thText1, thText2, totalCount) {
  let executedCount = 0;

  const tryNext = () => {
    if (executedCount >= totalCount) {
      console.log('All comparisons completed.');
      return;
    }

    compareAndAct(thText1, thText2, executedCount === totalCount - 1, () => {
      executedCount++;
      tryNext();
    });
  };

  tryNext();
}

function compareAndAct(thText1, thText2, isLast, onSuccess) {
  const td1 = getLastTdByThText(thText1);
  const td2 = getLastTdByThText(thText2);

  if (!td1 || !td2) {
    console.warn('One or both <th> elements not found.');
    return;
  }

  const text1 = td1.textContent.trim();
  const text2 = td2.textContent.trim();

  if (text2.includes(text1)) {
    checkRadioByLabelValue(text2);
    setTimeout(() => clickBeatAndNextButton(isLast, onSuccess), 1000);
  } else {
    document.addEventListener('mousemove', function handleMouse(e) {
      document.removeEventListener('mousemove', handleMouse);
      showChoiceButtons(text1, text2, e.clientX, e.clientY, () => {
        setTimeout(() => clickBeatAndNextButton(isLast, onSuccess), 1000);
      });
    });
  }
}

function clickBeatAndNextButton(isLast, onSuccess) {
  const beatBtn = Array.from(document.querySelectorAll('button'))
    .find(btn => btn.textContent.trim().toLowerCase() === '登録');

  if (beatBtn) {
    beatBtn.click();

    setTimeout(() => {
      let nextBtn;
      if (isLast) {
        nextBtn = Array.from(document.querySelectorAll('button'))
          .find(btn => btn.textContent.trim().toLowerCase() === '閉じる');
      } else {
        nextBtn = Array.from(document.querySelectorAll('button'))
          .find(btn => btn.textContent.trim().toLowerCase() === '次へ');
      }

      if (nextBtn) {
        nextBtn.click();
        onSuccess?.();
      } else {
        console.warn('次へ button not found.');
      }
    }, 2000); // delay before next
  } else {
    console.warn('登録 button not found.');
  }
}